name: Release Extension (v2)
on:
  repository_dispatch:
    types: [liquibase-release]
  workflow_dispatch:
    inputs:
      liquibaseVersion:
        description: "Liquibase Version"
        required: true
      extensionVersion:
        description: "Container Version (Defaults to Liquibase Version)"
        required: false

env:
  IMAGE_NAME: liquibase/liquibase

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      liquibaseVersion: ${{ steps.collect-data.outputs.liquibaseVersion }}
      extensionVersion: ${{ steps.collect-data.outputs.extensionVersion }}
      minorVersion: ${{ steps.collect-data.outputs.minorVersion }}
    steps:
      - name: Collect Data
        id: collect-data
        uses: actions/github-script@v4
        with:
          script: |
            const getMinorVersion = (liquibaseVersion) => {
              const arr = liquibaseVersion.split(".")
              return `${arr[0]}.${arr[1]}`
            }
            if (context.payload.client_payload) {
                const liquibaseVersion = context.payload.client_payload.liquibaseVersion
                const minorVersion = getMinorVersion(liquibaseVersion)
                core.setOutput("liquibaseVersion", liquibaseVersion);
                core.setOutput("extensionVersion", liquibaseVersion);
                core.setOutput("minorVersion", minorVersion);
            } else if (context.payload.inputs) {
                const liquibaseVersion = context.payload.inputs.liquibaseVersion
                const minorVersion = getMinorVersion(liquibaseVersion)
                core.setOutput("liquibaseVersion", liquibaseVersion);
                core.setOutput("extensionVersion", context.payload.inputs.extensionVersion || liquibaseVersion);
                core.setOutput("minorVersion", minorVersion);
            } else {
              core.setFailed('Unknown event type')
            }

      - run: |
          echo "Saw Liquibase version ${{ steps.collect-data.outputs.liquibaseVersion }}"
          echo "Saw Extension version ${{ steps.collect-data.outputs.extensionVersion }}"

  update:
    name: "Update Files"
    runs-on: ubuntu-latest
    needs: setup
    outputs:
      releaseSha: ${{ steps.get-release-sha.outputs.releaseSha }}
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will fail to push refs to dest repo

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: "8"
          distribution: "adopt"

      - name: Configure git user
        run: |
          git config user.name "liquibot"
          git config user.email "liquibot@liquibase.org"

      - name: Update Dockerfile and commit changes
        run: |
          LIQUIBASE_SHA=`curl -LsS https://github.com/liquibase/liquibase/releases/download/v${{ needs.setup.outputs.liquibaseVersion }}/liquibase-${{ needs.setup.outputs.liquibaseVersion }}.tar.gz | sha256sum | awk '{ print $1 }'`
          sed -i 's/^ARG LIQUIBASE_VERSION=.*/ARG LIQUIBASE_VERSION='"${{ needs.setup.outputs.liquibaseVersion }}"'/' ${{ github.workspace }}/Dockerfile
          sed -i 's/^ARG LB_SHA256=.*/ARG LB_SHA256='"$LIQUIBASE_SHA"'/' ${{ github.workspace }}/Dockerfile

          git add Dockerfile
          if git diff-index --cached --quiet HEAD --
          then
            echo "Nothing new to commit"
          else
            git commit -m "Liquibase Version Bumped to ${{ needs.setup.outputs.extensionVersion }}"
          fi
          git tag -a -m "Version Bumped to ${{ needs.setup.outputs.extensionVersion }}" v${{ needs.setup.outputs.extensionVersion }}
          git push "https://liquibot:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git" HEAD:${{ github.ref }} --follow-tags --tags

        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}

      - name: Get release SHA
        id: get-release-sha
        run: echo ::set-output name=releaseSha::$(git rev-parse HEAD)

  draft-release:
    needs: [setup, update]
    name: Draft Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          target_commitish: ${{ needs.update.outputs.releaseSha }}
          name: v${{ needs.setup.outputs.extensionVersion }}
          tag_name: v${{ needs.setup.outputs.extensionVersion }}
          draft: true
          body: Support for Liquibase ${{ needs.setup.outputs.liquibaseVersion }}.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-push:
    needs: [setup, draft-release]
    runs-on: ubuntu-latest
    name: Build and Push
    steps:
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.IMAGE_NAME }}:latest,${{ env.IMAGE_NAME }}:${{ needs.setup.outputs.extensionVersion }},${{ env.IMAGE_NAME }}:${{ needs.setup.outputs.minorVersion }}
