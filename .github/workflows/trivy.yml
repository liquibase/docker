# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Vulnerability Scanning

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  schedule:
    - cron: '0 7 * * 1-5' # Run every weekday at 7am UTC

permissions:
  contents: read
  id-token: write # Required for AWS OIDC authentication
  security-events: write # Required for uploading SARIF results to GitHub Security tab
  actions: read # Required for private repositories to get Action run status
  pull-requests: write # Required for writing comments on pull requests

jobs:
  trivy:
    strategy:
      fail-fast: false
      matrix:
        image: [ 
          {dockerfile: Dockerfile, name: liquibase/liquibase, suffix: ""},
          {dockerfile: Dockerfile.alpine, name: liquibase/liquibase, suffix: "-alpine"},
          {dockerfile: DockerfilePro, name: liquibase/liquibase-pro, suffix: "-pro"},
          ]
    name: Trivy
    runs-on: "ubuntu-22.04"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build ${{ matrix.image.name }}${{ matrix.image.suffix }} from Dockerfile
        run: |
          docker build -f ${{ matrix.image.dockerfile }} -t ${{ matrix.image.name }}${{ matrix.image.suffix }}:${{ github.sha }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.31.0
        with:
          image-ref: '${{ matrix.image.name }}${{ matrix.image.suffix }}:${{ github.sha }}'
          vuln-type: 'os,library'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'HIGH,CRITICAL'
          exit-code: '1'
          limit-severities-for-sarif: true

      - name: Configure AWS credentials for vault access
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.LIQUIBASE_VAULT_OIDC_ROLE_ARN }}
          aws-region: us-east-1

      - name: Get secrets from vault
        id: vault-secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            ,/vault/liquibase
          parse-json-secrets: true

      - name: Notify Slack on Build Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: 'failure'
          SLACK_MESSAGE: "View details on GitHub Actions: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}. Triggered by repository: ${{ github.repository }} and job: ${{ github.job }}"
          SLACK_TITLE: "❌ ${{ github.repository }} ❌ Trivy failed on branch ${{ github.ref_name }} for commit ${{ github.sha }} in repository ${{ github.repository }}"
          SLACK_USERNAME: liquibot
          SLACK_WEBHOOK: ${{ env.DOCKER_SLACK_WEBHOOK_URL }}
          SLACK_ICON_EMOJI: ":whale:"
          SLACK_FOOTER: "${{ github.repository }} - ${{ matrix.image.name }}${{ matrix.image.suffix }}:${{ github.sha }}"
          SLACK_LINK_NAMES: true

      - name: Upload Trivy scan results to GitHub Security tab
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
          category: '${{ matrix.image.name }}${{ matrix.image.suffix }}'

      - name: Generate Security Report
        if: always()
        uses: rsdmike/github-security-report-action@v3.0.4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          outputDir: ./reports/trivy${{ matrix.image.suffix }}/
          sarifReportDir: .

      - name: Upload Security Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-report-trivy${{ matrix.image.suffix }}
          path: ./reports/trivy${{ matrix.image.suffix }}/summary.pdf


  scout:
    strategy:
      fail-fast: false
      matrix:
        image: [ 
          {dockerfile: Dockerfile, name: liquibase/liquibase, suffix: ""},
          {dockerfile: Dockerfile.alpine, name: liquibase/liquibase, suffix: "-alpine"},
          {dockerfile: DockerfilePro, name: liquibase/liquibase-pro, suffix: "-pro"},
          ]
    name: Scout
    runs-on: "ubuntu-22.04"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build ${{ matrix.image.name }}${{ matrix.image.suffix }} from Dockerfile
        run: |
          docker build -f ${{ matrix.image.dockerfile }} -t ${{ matrix.image.name }}${{ matrix.image.suffix }}:${{ github.sha }} .

      - name: Configure AWS credentials for vault access
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.LIQUIBASE_VAULT_OIDC_ROLE_ARN }}
          aws-region: us-east-1

      - name: Get secrets from vault
        id: vault-secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            ,/vault/liquibase
          parse-json-secrets: true

      - name: Decode DOCKERHUB_USERNAME
        run: |
          decoded_username=$(echo "${{ env.DOCKERHUB_USERNAME }}" | base64 -d)
          echo "DOCKERHUB_USERNAME_DECODED=$decoded_username" >> $GITHUB_ENV

      - uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME_DECODED }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Docker Scout
        uses: docker/scout-action@v1.18.2
        with:
          command: cves
          image: '${{ matrix.image.name }}${{ matrix.image.suffix }}:${{ github.sha }}'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          write-comment: true
          sarif-file: 'scout-results.sarif'
          summary: true
          exit-code: true
          only-severities: "critical,high"

      - name: Notify Slack on Build Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: 'failure'
          SLACK_MESSAGE: "View details on GitHub Actions: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}. Triggered by repository: ${{ github.repository }} and job: ${{ github.job }}"
          SLACK_TITLE: "❌ ${{ github.repository }} ❌ Docker Scout failed on branch ${{ github.ref_name }} for commit ${{ github.sha }} in repository ${{ github.repository }}"
          SLACK_USERNAME: liquibot
          SLACK_WEBHOOK: ${{ env.DOCKER_SLACK_WEBHOOK_URL }}
          SLACK_ICON_EMOJI: ":whale:"
          SLACK_FOOTER: "${{ github.repository }} - ${{ matrix.image.name }}${{ matrix.image.suffix }}:${{ github.sha }}"
          SLACK_LINK_NAMES: true

      - name: Upload Scout scan results to GitHub Security tab
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'scout-results.sarif'
          category: '${{ matrix.image.name }}${{ matrix.image.suffix }}'

      - name: Generate Security Report
        if: always()
        uses: rsdmike/github-security-report-action@v3.0.4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          outputDir: ./reports/scout${{ matrix.image.suffix }}/
          sarifReportDir: .

      - name: Upload Security Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-report-scout${{ matrix.image.suffix }}
          path: ./reports/scout${{ matrix.image.suffix }}/summary.pdf